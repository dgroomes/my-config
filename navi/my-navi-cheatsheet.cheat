; Hello! this file is a navi "cheatsheet". This line is a comment because it leads with the semi-colon (;) character.
; Read more about the navi cheatsheet syntax at https://github.com/denisidoro/navi/blob/master/docs/cheatsheet_syntax.md.


% git, code


# Change branch
git checkout <branch>
$ branch: git branch | awk '{print $NF}'

# Prune local tracking branches
; From this great StackOverflow answer https://stackoverflow.com/a/17029936
git fetch -p ; git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d


% json, yaml


# Convert YAML to JSON
;Either pipe a YAML file to this command or give it as an argument.
ruby -ryaml -rjson -e 'puts JSON.pretty_generate(YAML.load(ARGF))'

# Convert JSON to YAML
; Either pipe a JSON file to this command or give it as an argument.
ruby -ryaml -rjson -e 'puts YAML.dump(JSON.load(ARGF))'


% config

; Edit '~/.bashrc' in Sublime Text. Why Sublime Text and not Visual Studio Code? Both are great editors. Sublime Text's
; "time to first meaningful paint" is under 500ms whereas I measured the same operation at 4.5 seconds for VS Code. I'm
; going give Sublime Text 4 a try. It's been years since I used it.
# Edit .bashrc
subl ~/.bashrc

# Edit Bash profile
subl ~/.bash_profile

# Edit Starship config
subl ~/.config/starship.toml

# Edit Bash aliases
subl ~/.config/bash/bash-aliases.sh

# Edit Bash environment file
subl ~/.config/bash/bash-env.sh

# Edit Bash functions file
subl ~/.config/bash/bash-functions.sh

% Insomnia

# View Insomnia response in jless
; This command pipes the latest Insomnia response to 'jless'.
;
; Insomnia has a hard time rendering large JSON files (even beyond 500KB) in the UI. The content will take a few seconds
; to appear, and then subsequent interactions with the content, like minimizing a section, might cause another slow
; re-render procedure.
;
; An effective alternative is to jump to the commandline and use a tool fit for the job. "jless" (https://github.com/PaulJuliusMartinez/jless)
; is an awesome JSON explorer tool.
;
; This navi cheat will find the newest file in Insomnia's internal "responses/" directory and pipe it to jless.
; Note that the execution of a request in Insomnia actually produces two files: a ".response" file and a ".timeline"
; file. The ".response" file contains the actual response content.
cat "$(ls -t "$HOME/Library/Application Support/Insomnia/responses"/*.response | head -n 1)" | jless
